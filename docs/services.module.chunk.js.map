{"version":3,"sources":["./src/app/services/pop-demo/pop-demo.component.html","./src/app/services/pop-demo/pop-demo.component.less","./src/app/services/pop-demo/pop-demo.component.ts","./src/app/services/popup-demo/popup-demo.component.html","./src/app/services/popup-demo/popup-demo.component.less","./src/app/services/popup-demo/popup-demo.component.ts","./src/app/services/services.component.html","./src/app/services/services.component.less","./src/app/services/services.component.ts","./src/app/services/services.module.ts","./src/app/services/services.routing.ts","./src/app/services/toaster-demo/toaster-demo.component.html","./src/app/services/toaster-demo/toaster-demo.component.less","./src/app/services/toaster-demo/toaster-demo.component.ts","./src/app/services/tracert-demo/tracert-demo.component.html","./src/app/services/tracert-demo/tracert-demo.component.less","./src/app/services/tracert-demo/tracert-demo.component.ts"],"names":[],"mappings":"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","file":"services.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"app-content-body fade-in-up\\\">\\n    <div class=\\\"pad-def bg-default bor-b-def\\\">\\n        <h2 class=\\\"no-margin\\\">PopService<small class=\\\"font-xs text-disabled pad-l-xs\\\">service</small> </h2>\\n    </div>\\n\\n\\n    <div class=\\\"pad-def\\\">\\n        <div class=\\\"mar-b-sm\\\">\\n            <p>\\n                <button class=\\\"btn btn-info\\\" (click)=\\\"info()\\\">pop.info</button>\\n                <button class=\\\"btn btn-warning\\\" (click)=\\\"confirm()\\\">pop.confirm</button>\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"error()\\\">pop.error</button>\\n                <button class=\\\"btn btn-default\\\" (click)=\\\"loader()\\\">loader</button>\\n            </p>\\n        </div>\\n        <div class=\\\"tab-container\\\">\\n            <ul class=\\\"nav nav-tabs \\\">\\n                <li [ngClass]=\\\"{active: tabIndex===0}\\\">\\n                    <a (click)=\\\"changTab(0)\\\">html</a>\\n                </li>\\n                <li [ngClass]=\\\"{active: tabIndex===1}\\\">\\n                    <a (click)=\\\"changTab(1)\\\">typescript</a>\\n                </li>\\n            </ul>\\n            <div class=\\\"tab-content\\\">\\n                <div class=\\\"tab-pane \\\" [ngClass]=\\\"{active: tabIndex===0}\\\">\\n                    <code-high-light language=\\\"html\\\" codeSrc=\\\"./assets/sources/services/pop-demo/pop-demo.component.html\\\" maxHeight=\\\"500px\\\">\\n                    </code-high-light>\\n                </div>\\n                <div class=\\\"tab-pane\\\" [ngClass]=\\\"{active: tabIndex===1}\\\">\\n                    <code-high-light language=\\\"typescript\\\" codeSrc=\\\"./assets/sources/services/pop-demo/pop-demo.component.ts.code\\\" maxHeight=\\\"500px\\\">\\n                    </code-high-light>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <p id=\\\"method\\\" class=\\\"h4  m-b-sm m-t-sm block text-primary\\\">方法</p>\\n\\n        <table class=\\\"table table-bordered bg-white\\\">\\n            <thead class=\\\"bg-default\\\">\\n                <tr>\\n                    <th>方法名</th>\\n                    <th>参数</th>\\n                    <th>参数类型</th>\\n                    <th>说明</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr>\\n                    <td><i>info</i></td>\\n                    <td>...args</td>\\n                    <td>不定参数</td>\\n                    <td>\\n                        消息提示。第一个字符串参数作为消息文字text，第二个字符串参数作为消息标题title，第一个json对象参数作为<a class=\\\"text-info\\\">options</a>参数。\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td><i>error</i></td>\\n                    <td>...args</td>\\n                    <td>不定参数</td>\\n                    <td>\\n                        错误提示。第一个字符串参数作为消息文字text，第二个字符串参数作为消息标题title，第一个json对象参数作为<a class=\\\"text-info\\\">options</a>参数。\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td><i>confirm</i></td>\\n                    <td>...args</td>\\n                    <td>不定参数</td>\\n                    <td>\\n                        确认提示。第一个字符串参数作为消息文字text，第二个字符串参数作为消息标题title，第一个json对象参数作为<a class=\\\"text-info\\\">options</a>参数。\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td><i>onConfirm</i></td>\\n                    <td>fn（必须）</td>\\n                    <td>Function</td>\\n                    <td>\\n                        为弹出框添加“确认”回调，当传入的参数为非箭头函数时，该函数上下文（this）指向该PopService实例。\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td><i>onCancel</i></td>\\n                    <td>fn（必须）</td>\\n                    <td>Function</td>\\n                    <td>\\n                        为弹出框添加“取消”回调，当传入的参数为非箭头函数时，该函数上下文（this）指向该PopService实例。\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td><i>onClose</i></td>\\n                    <td>fn（必须）</td>\\n                    <td>Function</td>\\n                    <td>\\n                        为弹出框添加“关闭”(右上方关闭按钮点击后）回调，当传入的参数为非箭头函数时，该函数上下文（this）指向该PopService实例。\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td><i>close</i></td>\\n                    <td>无</td>\\n                    <td>-</td>\\n                    <td>\\n                        关闭提示框。\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n        <ul class=\\\"no-padding\\\">\\n            <li class=\\\"no-li-style\\\">\\n                <p id=\\\"options\\\" class=\\\"h4  m-b-sm m-t-sm block\\\">options说明</p>\\n                <table class=\\\"table table-bordered bg-white\\\">\\n                    <thead class=\\\"bg-default\\\">\\n                        <tr>\\n                            <th>属性名</th>\\n                            <th>类型</th>\\n                            <th class=\\\"text-center\\\" width=\\\"100px\\\">是否必须</th>\\n                            <th>说明</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>title</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>标题文字，默认值为“提示”</td>\\n                        </tr>\\n                        <tr>\\n                            <td>text</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">是</td>\\n                            <td>pop弹出框正文</td>\\n                        </tr>\\n                        <tr>\\n                            <td>confirmButtonText</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>“确定”按钮文字，默认值为“确定”</td>\\n                        </tr>\\n                        <tr>\\n                            <td>cancelButtonText</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>“取消”按钮文字，默认值为“取消”</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showConfirmButton</td>\\n                            <td>boolean</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>是否显示“确定”按钮，默认为true</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showCancelButton</td>\\n                            <td>boolean</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>是否显示“取消”按钮，默认为false</td>\\n                        </tr>\\n                        <tr>\\n                            <td>confirmButtonType</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>确定按钮类型，默认值为“info”，如值为“info”时，将会为“确定按钮”加上名为“btn-info”的class类，可选值包括“info”、“primary”、“success”、“warning”、“default”、“danger”、“dark”</td>\\n                        </tr>\\n                        <tr>\\n                            <td>cancelButtonType</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>取消按钮类型，默认值为“default”，如值为“info”时，将会为“取消按钮”加上名为“btn-info”的class类，可选值包括“info”、“primary”、“success”、“warning”、“default”、“danger”、“dark”</td>\\n                        </tr>\\n                        <tr>\\n                            <td>closeOnConfirm</td>\\n                            <td>boolean</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>是否点击“确定”按钮后关闭，默认值为true</td>\\n                        </tr>\\n                        <tr>\\n                            <td>closeOnCancel</td>\\n                            <td>boolean</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>是否点击“取消”按钮后关闭，默认值为true</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showLoaderOnConfirm</td>\\n                            <td>boolean</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>是否在点击“确定”按钮后将按钮设为“loading”状态，默认值为false</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showLoaderOnCancel</td>\\n                            <td>boolean</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>是否在点击“取消”按钮后将按钮设为“loading”状态，默认值为false</td>\\n                        </tr>\\n                        <tr>\\n                            <td>confirmLoaderContent</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>“确定”按钮loading时按钮内容，默认使用按钮文字</td>\\n                        </tr>\\n                        <tr>\\n                            <td>cancelLoaderContent</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>“取消”按钮loading时按钮内容，默认使用按钮文字</td>\\n                        </tr>\\n                        <tr>\\n                            <td>textAlign</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>pop正文的对齐方式，可选值“left”、“center”,默认为“left”</td>\\n                        </tr>\\n                        <tr>\\n                            <td>iconClass</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>pop正文开始位置图标的class类，可通过此参数为弹出框添加字体图标</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/pop-demo/pop-demo.component.html\n// module id = ./src/app/services/pop-demo/pop-demo.component.html\n// module chunks = services.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/pop-demo/pop-demo.component.less\n// module id = ./src/app/services/pop-demo/pop-demo.component.less\n// module chunks = services.module","import { Component} from '@angular/core';\nimport { PopService} from 'dolphinng';\n@Component({\n    selector: 'pop-demo',\n    templateUrl: './pop-demo.component.html',\n    styleUrls: ['./pop-demo.component.less'],\n    providers:[PopService]\n})\nexport class PopDemoComponent {\n\n  tabIndex:number=0;\n  constructor(private pop:PopService){\n  }\n  changTab(index:number){\n    this.tabIndex=index;\n  }\n  info(){\n    console.log('info');\n    this.pop.info({\n      title:'系统提示',\n      text:'这是一个消息提示！',\n      textAlign:'center'\n    });\n  }\n  confirm(){\n    this.pop.confirm({\n      title:'操作确认',\n      text:'确定要这么做吗？'\n    }).onConfirm(()=>{\n      alert('你选择了确定按钮');\n    }).onCancel(()=>{\n      alert('你选择了取消按钮');\n    }).onClose(()=>{\n      alert('你选择了关闭');\n    });\n  }\n  error(){\n    this.pop.error({\n      title:'错误提示',\n      text:'对象未定义'\n    })\n  }\n  loader(){\n    this.pop.confirm({\n      title:'操作确认',\n      text:'确定要这么做吗？',\n      closeOnConfirm:false,\n      showLoaderOnConfirm:true,\n      confirmLoaderText:'正在提交'\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/pop-demo/pop-demo.component.ts","module.exports = \"<div class=\\\"app-content-body fade-in-up\\\">\\n    <div class=\\\"pad-def bg-default bor-b-def\\\">\\n        <h2 class=\\\"no-margin\\\">PopupService<small class=\\\"font-xs text-disabled pad-l-xs\\\">service</small> </h2>\\n    </div>\\n\\n\\n    <div class=\\\"pad-def\\\">\\n        <div class=\\\"mar-b-sm\\\">\\n            <p>\\n                <button class=\\\"btn btn-info\\\" (click)=\\\"info()\\\">popup.info</button>\\n                <button class=\\\"btn btn-warning\\\" (click)=\\\"confirm()\\\">popup.confirm</button>\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"error()\\\">popup.error</button>\\n                <button class=\\\"btn btn-default\\\" (click)=\\\"loader()\\\">loader</button>\\n            </p>\\n        </div>\\n        <div class=\\\"tab-container\\\">\\n            <ul class=\\\"nav nav-tabs \\\">\\n                <li [ngClass]=\\\"{active: tabIndex===0}\\\">\\n                    <a (click)=\\\"changTab(0)\\\">html</a>\\n                </li>\\n                <li [ngClass]=\\\"{active: tabIndex===1}\\\">\\n                    <a (click)=\\\"changTab(1)\\\">typescript</a>\\n                </li>\\n            </ul>\\n            <div class=\\\"tab-content\\\">\\n                <div class=\\\"tab-pane \\\" [ngClass]=\\\"{active: tabIndex===0}\\\">\\n                    <code-high-light language=\\\"html\\\" codeSrc=\\\"./assets/sources/services/popup-demo/popup-demo.component.html\\\" maxHeight=\\\"500px\\\">\\n                    </code-high-light>\\n                </div>\\n                <div class=\\\"tab-pane\\\" [ngClass]=\\\"{active: tabIndex===1}\\\">\\n                    <code-high-light language=\\\"typescript\\\" codeSrc=\\\"./assets/sources/services/popup-demo/popup-demo.component.ts.code\\\" maxHeight=\\\"500px\\\">\\n                    </code-high-light>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <p id=\\\"method\\\" class=\\\"h4  m-b-sm m-t-sm block text-primary\\\">方法</p>\\n        <ul class=\\\"pad-def bg-white bor-def mar-b-sm\\\">\\n            <li>\\n                <p><i class=\\\"bold\\\">info</i><span class=\\\"text-disabled\\\">(...args)</span> 消息提示。第一个字符串参数作为消息文字text，第二个字符串参数作为消息标题title，第一个json对象参数作为<a class=\\\"text-info\\\">options</a>参数。</p>\\n            </li>\\n            <li>\\n                <p><i class=\\\"bold\\\">error</i><span class=\\\"text-disabled\\\">(...args)</span> 错误提示。第一个字符串参数作为消息文字text，第二个字符串参数作为消息标题title，第一个json对象参数作为<a class=\\\"text-info\\\">options</a>参数。</p>\\n            </li>\\n            <li>\\n                <p><i class=\\\"bold\\\">confirm</i><span class=\\\"text-disabled\\\">(...args)</span> 确认提示。第一个字符串参数作为消息文字text，第二个字符串参数作为消息标题title，第一个json对象参数作为<a class=\\\"text-info\\\">options</a>参数。</p>\\n            </li>\\n            <li>\\n                <p><i class=\\\"bold\\\">onConfirm</i><span class=\\\"text-disabled\\\">(fn:Function)</span> 为弹出框添加“确认”回调，当传入的参数为非箭头函数时，该函数上下文（this）指向该PopupService实例。</p>\\n            </li>\\n            <li>\\n                <p><i class=\\\"bold\\\">onCancel</i><span class=\\\"text-disabled\\\">(fn:Function)</span> 为弹出框添加“确认”回调，当传入的参数为非箭头函数时，该函数上下文（this）指向该PopService实例。</p>\\n            </li>\\n            <li>\\n                <p><i class=\\\"bold\\\">onClose</i><span class=\\\"text-disabled\\\">(fn:Function)</span> 为弹出框添加“关闭”回调，当传入的参数为非箭头函数时，该函数上下文（this）指向该PopService实例。</p>\\n            </li>\\n            <li>\\n                <p><i class=\\\"bold\\\">close</i> 关闭提示框。</p>\\n            </li>\\n        </ul>\\n        <p id=\\\"options\\\" class=\\\"h4 text-primary m-b-sm m-t-sm block\\\">options说明</p>\\n        <ul class=\\\"no-padding over-auto\\\">\\n            <li class=\\\"no-li-style\\\">\\n                <table class=\\\"table table-bordered bg-white\\\">\\n                    <thead class=\\\"bg-default\\\">\\n                        <tr>\\n                            <th>属性名</th>\\n                            <th>类型</th>\\n                            <th class=\\\"text-center\\\" width=\\\"100px\\\">是否必须</th>\\n                            <th>说明</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>title</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>标题文字，默认值为“提示”</td>\\n                        </tr>\\n                        <tr>\\n                            <td>text</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">是</td>\\n                            <td>pop弹出框正文</td>\\n                        </tr>\\n                        <tr>\\n                            <td>confirmButtonText</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>“确定”按钮文字，默认值为“确定”</td>\\n                        </tr>\\n                        <tr>\\n                            <td>cancelButtonText</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>“取消”按钮文字，默认值为“取消”</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showConfirmButton</td>\\n                            <td>boolean</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>是否显示“确定”按钮，默认为true</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showCancelButton</td>\\n                            <td>boolean</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>是否显示“取消”按钮，默认为false</td>\\n                        </tr>\\n                        <tr>\\n                            <td>confirmButtonType</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>确定按钮类型，默认值为“info”，如值为“info”时，将会为“确定按钮”加上名为“btn-info”的class类，可选值包括“info”、“primary”、“success”、“warning”、“default”、“danger”、“dark”</td>\\n                        </tr>\\n                        <tr>\\n                            <td>cancelButtonType</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>取消按钮类型，默认值为“default”，如值为“info”时，将会为“取消按钮”加上名为“btn-info”的class类，可选值包括“info”、“primary”、“success”、“warning”、“default”、“danger”、“dark”</td>\\n                        </tr>\\n                        <tr>\\n                            <td>closeOnConfirm</td>\\n                            <td>boolean</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>是否点击“确定”按钮后关闭，默认值为true</td>\\n                        </tr>\\n                        <tr>\\n                            <td>closeOnCancel</td>\\n                            <td>boolean</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>是否点击“取消”按钮后关闭，默认值为true</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showLoaderOnConfirm</td>\\n                            <td>boolean</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>是否在点击“确定”按钮后将按钮设为“loading”状态，默认值为false</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showLoaderOnCancel</td>\\n                            <td>boolean</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>是否在点击“取消”按钮后将按钮设为“loading”状态，默认值为false</td>\\n                        </tr>\\n                        <tr>\\n                            <td>confirmLoaderContent</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>“确定”按钮loading时按钮内容，默认使用按钮文字</td>\\n                        </tr>\\n                        <tr>\\n                            <td>cancelLoaderContent</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>“取消”按钮loading时按钮内容，默认使用按钮文字</td>\\n                        </tr>\\n                        <tr>\\n                            <td>textAlign</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>pop正文的对齐方式，可选值“left”、“center”,默认为“left”</td>\\n                        </tr>\\n                        <tr>\\n                            <td>iconClass</td>\\n                            <td>string</td>\\n                            <td class=\\\"text-center\\\">否</td>\\n                            <td>pop正文开始位置图标的class类，可通过此参数为弹出框添加字体图标</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </li>\\n        </ul>\\n        <p class=\\\"h5 text-disabled m-b-sm m-t-sm block\\\">注：与原<a class=\\\"text-info\\\" routerLink=\\\"/services/pop\\\">Popservice</a>（仍保留）使用完全一样，只是改了个名字</p>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/popup-demo/popup-demo.component.html\n// module id = ./src/app/services/popup-demo/popup-demo.component.html\n// module chunks = services.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/popup-demo/popup-demo.component.less\n// module id = ./src/app/services/popup-demo/popup-demo.component.less\n// module chunks = services.module","import { Component} from '@angular/core';\nimport { PopupService} from 'dolphinng';\n@Component({\n    selector: 'popup-demo',\n    templateUrl: './popup-demo.component.html',\n    styleUrls: ['./popup-demo.component.less'],\n    providers:[PopupService]\n})\nexport class PopupDemoComponent {\n\n  tabIndex:number=0;\n  constructor(private popup:PopupService){\n  }\n  changTab(index:number){\n    this.tabIndex=index;\n  }\n  info(){\n    this.popup.info({\n      title:'系统提示',\n      text:'这是一个消息提示！',\n      textAlign:'center'\n    });\n  }\n  confirm(){\n    this.popup.confirm({\n      title:'操作确认',\n      text:'确定要这么做吗？'\n    }).onConfirm(()=>{\n      alert('你选择了确定按钮');\n    }).onCancel(()=>{\n      alert('你选择了取消按钮');\n    }).onClose(()=>{\n      alert('你选择了关闭');\n    });\n  }\n  error(){\n    this.popup.error({\n      title:'错误提示',\n      text:'对象未定义'\n    })\n  }\n  loader(){\n    this.popup.confirm({\n      title:'操作确认',\n      text:'确定要这么做吗？',\n      closeOnConfirm:false,\n      showLoaderOnConfirm:true,\n      confirmLoaderText:'正在提交'\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/popup-demo/popup-demo.component.ts","module.exports = \"<div class=\\\"pad-def bg-default bor-b-def\\\">\\n  <h2 class=\\\"no-margin\\\">Feedback</h2>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/services.component.html\n// module id = ./src/app/services/services.component.html\n// module chunks = services.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/services.component.less\n// module id = ./src/app/services/services.component.less\n// module chunks = services.module","import { Component} from '@angular/core';\n@Component({\n    selector: 'services',\n    templateUrl: './services.component.html',\n    styleUrls: ['./services.component.less'],\n})\nexport class ServicesComponent {\n\n  constructor(){\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/services.component.ts","import { NgModule } from '@angular/core';\nimport { ServicesComponent }   from './services.component';\nimport { PopDemoComponent }   from './pop-demo/pop-demo.component';\nimport { PopupDemoComponent }   from './popup-demo/popup-demo.component';\nimport { ToasterDemoComponent }   from './toaster-demo/toaster-demo.component';\nimport { TracertDemoComponent }   from './tracert-demo/tracert-demo.component';\nimport { SharedModule }   from '../shared/shared.module';\nimport { routing } from './services.routing';\n\n@NgModule({\n    imports: [routing,SharedModule],\n    declarations: [\n      ServicesComponent,\n      PopDemoComponent,\n      PopupDemoComponent,\n      ToasterDemoComponent,\n      TracertDemoComponent,\n    ]\n})\nexport class ServicesModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/services.module.ts","import { Routes, RouterModule } from '@angular/router';\nimport { ServicesComponent } from './services.component';\nimport { PopDemoComponent } from './pop-demo/pop-demo.component';\nimport { PopupDemoComponent } from './popup-demo/popup-demo.component';\nimport { ToasterDemoComponent } from './toaster-demo/toaster-demo.component';\nimport { TracertDemoComponent }   from './tracert-demo/tracert-demo.component';\nconst routes: Routes = <Routes>[\n    {\n        path: '',\n        component: ServicesComponent\n    },\n    {\n        path: 'pop',\n        component: PopDemoComponent\n    },\n    {\n        path: 'popup',\n        component: PopupDemoComponent\n    },\n    {\n        path: 'toaster',\n        component: ToasterDemoComponent\n    },\n    {\n        path: 'tracert',\n        component: TracertDemoComponent\n    }\n\n\n];\nexport const routing = RouterModule.forChild(routes);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/services.routing.ts","module.exports = \"<div class=\\\"pad-def bg-default bor-b-def\\\">\\n    <h2 class=\\\"no-margin\\\">Toaster\\n        <small class=\\\"font-xs text-disabled pad-l-xs\\\">service</small>\\n    </h2>\\n</div>\\n<div class=\\\"wrapper-md\\\">\\n    <div class=\\\"row bg-default bor-b-def mar-b-sm pad-b-def\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Title</label>\\n                <input type=\\\"text\\\" class=\\\"form-control ng-pristine ng-untouched ng-valid\\\" placeholder=\\\"输入标题\\\" [(ngModel)]=\\\"toastOptions.title\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label>Message</label>\\n                <textarea class=\\\"form-control ng-pristine ng-untouched ng-valid\\\" placeholder=\\\"输入消息内容\\\" rows=\\\"5\\\" [(ngModel)]=\\\"toastOptions.message\\\"></textarea>\\n            </div>\\n            <button class=\\\"btn btn-{{toastOptions.type==='error'?'danger':\\n                             toastOptions.type==='wait'?'info':toastOptions.type}}\\\" (click)=\\\"popToaster()\\\">点我试试\\n      </button>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <label>Type</label>\\n\\n            <div class=\\\"radio\\\">\\n                <label class=\\\"i-checks\\\" (click)=\\\"changeToasterType('success')\\\">\\n          <input type=\\\"radio\\\" name=\\\"toaster\\\" value=\\\"success\\\" [checked]=\\\"toastOptions.type==='success'\\\">\\n          <i></i>\\n          Success\\n        </label>\\n            </div>\\n            <div class=\\\"radio\\\">\\n                <label class=\\\"i-checks\\\" (click)=\\\"changeToasterType('info')\\\">\\n          <input type=\\\"radio\\\" name=\\\"toaster\\\" value=\\\"info\\\" [checked]=\\\"toastOptions.type==='info'\\\">\\n          <i></i>\\n          Info\\n        </label>\\n            </div>\\n            <div class=\\\"radio\\\">\\n                <label class=\\\"i-checks\\\" (click)=\\\"changeToasterType('wait')\\\">\\n          <input type=\\\"radio\\\" name=\\\"toaster\\\" value=\\\"wait\\\" [checked]=\\\"toastOptions.type==='wait'\\\">\\n          <i></i>\\n          Wait\\n        </label>\\n            </div>\\n            <div class=\\\"radio\\\">\\n                <label class=\\\"i-checks\\\" (click)=\\\"changeToasterType('warning')\\\">\\n          <input type=\\\"radio\\\" name=\\\"toaster\\\" value=\\\"warning\\\" [checked]=\\\"toastOptions.type==='warning'\\\">\\n          <i></i>\\n          Warning\\n        </label>\\n            </div>\\n            <div class=\\\"radio\\\">\\n                <label class=\\\"i-checks\\\" (click)=\\\"changeToasterType('error')\\\">\\n          <input type=\\\"radio\\\" name=\\\"toaster\\\" value=\\\"error\\\" [checked]=\\\"toastOptions.type==='error'\\\">\\n          <i></i>\\n          Error\\n        </label>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"tab-container\\\">\\n        <ul class=\\\"nav nav-tabs \\\">\\n            <li [ngClass]=\\\"{active: tabIndex===0}\\\">\\n                <a (click)=\\\"changTab(0)\\\">html</a>\\n            </li>\\n            <li [ngClass]=\\\"{active: tabIndex===1}\\\">\\n                <a (click)=\\\"changTab(1)\\\">typescript</a>\\n            </li>\\n        </ul>\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"tab-pane \\\" [ngClass]=\\\"{active: tabIndex===0}\\\">\\n                <code-high-light language=\\\"html\\\" maxHeight=\\\"500px\\\" codeSrc=\\\"./assets/sources/services/toaster-demo/toaster-demo.component.html\\\">\\n                </code-high-light>\\n            </div>\\n            <div class=\\\"tab-pane\\\" [ngClass]=\\\"{active: tabIndex===1}\\\">\\n                <code-high-light language=\\\"typescript\\\" maxHeight=\\\"500px\\\" codeSrc=\\\"./assets/sources/services/toaster-demo/toaster-demo.component.ts.code\\\">\\n                </code-high-light>\\n            </div>\\n        </div>\\n    </div>\\n    <p class=\\\"h4  m-b-sm m-t-sm block text-primary\\\">方法</p>\\n    <div class=\\\"over-auto\\\">\\n        <table class=\\\"table table-bordered bg-white\\\">\\n            <thead class=\\\"bg-default\\\">\\n                <tr>\\n                    <th>方法名</th>\\n                    <th>参数</th>\\n                    <th width=\\\"100px\\\">参数类型</th>\\n                    <th width=\\\"200px\\\">说明</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr>\\n                    <td><i>pop</i></td>\\n                    <td>options</td>\\n                    <td>json对象</td>\\n                    <td>\\n                        默认弹出消息，详细说明见下方。\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td><i>info、success、wait、warning、error</i></td>\\n                    <td>...args</td>\\n                    <td>不定参数</td>\\n                    <td width=\\\"200px\\\">\\n                        显示5种状态（默认消息，成功提示，等待，警告，错误）的提示消息。第一个字符串参数作为消息文字text，第二个字符串参数作为消息标题title。\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    <p class=\\\"h5  m-b-sm m-t-sm block text-primary\\\" id=\\\"options\\\">options参数说明</p>\\n    <div class=\\\"over-auto\\\">\\n        <table class=\\\"table table-bordered table-responsive bg-white\\\">\\n            <thead class=\\\"bg-default\\\">\\n                <tr>\\n                    <th>属性值</th>\\n                    <th>类型</th>\\n                    <th class=\\\"text-center\\\">是否必须</th>\\n                    <th>说明</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr>\\n                    <td>type</td>\\n                    <td>string</td>\\n                    <td class=\\\"text-center\\\">否</td>\\n                    <td>弹出框的类型，默认为info,可选值：info、success、wait、warning、error</td>\\n                </tr>\\n                <tr>\\n                    <td>title</td>\\n                    <td>string</td>\\n                    <td class=\\\"text-center\\\">否</td>\\n                    <td>消息框的标题</td>\\n                </tr>\\n                <tr>\\n                    <td>message</td>\\n                    <td>string</td>\\n                    <td class=\\\"text-center\\\">是</td>\\n                    <td>消息框的正文</td>\\n                </tr>\\n                <tr>\\n                    <td>animated</td>\\n                    <td>boolean</td>\\n                    <td class=\\\"text-center\\\">否</td>\\n                    <td>是否使用动画，默认为true</td>\\n                </tr>\\n                <tr>\\n                    <td>delay</td>\\n                    <td>number</td>\\n                    <td class=\\\"text-center\\\">否</td>\\n                    <td>消息框持续时间，单位为毫秒，默认值5000，即5秒</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n<div class=\\\"pad-def\\\">\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/toaster-demo/toaster-demo.component.html\n// module id = ./src/app/services/toaster-demo/toaster-demo.component.html\n// module chunks = services.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/toaster-demo/toaster-demo.component.less\n// module id = ./src/app/services/toaster-demo/toaster-demo.component.less\n// module chunks = services.module","import { Component} from '@angular/core';\nimport { Toaster} from 'dolphinng';\n@Component({\n    selector: 'toaster-demo',\n    templateUrl: './toaster-demo.component.html',\n    styleUrls: ['./toaster-demo.component.less'],\n    providers:[Toaster]\n})\nexport class ToasterDemoComponent {\n  tabIndex:number=0;\n  toastOptions:{\n    type:string,\n    title:string,\n    message:string\n  }={\n    type:'success',\n    title:'Title',\n    message:'Message'\n  };\n  constructor(private toaster:Toaster){\n  }\n  changTab(index:number){\n    this.tabIndex=index;\n  }\n  popToaster(){\n    this.toaster.pop(this.toastOptions);\n  }\n  changeToasterType(type:string){\n      this.toastOptions.type=type;\n    console.log('radio');\n  }\n  popDemo(){\n    this.toaster.pop({\n      type:'success',\n      title:'标题',\n      message:'操作成功！',\n      animated:true,\n      delay:3000\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/toaster-demo/toaster-demo.component.ts","module.exports = \"<div class=\\\"app-content-body fade-in-up\\\">\\n    <div class=\\\"pad-def bg-default bor-b-def\\\">\\n        <h2 class=\\\"no-margin\\\">TracertService<small class=\\\"font-xs text-disabled pad-l-xs\\\">service</small> </h2>\\n    </div>\\n\\n\\n    <div class=\\\"pad-def\\\">\\n        <div class=\\\"mar-b-sm\\\">\\n            <p class=\\\"alert alert-info\\\">\\n                <span class=\\\"bold text-primary\\\">TracertService</span>是可注入的服务，用于订阅路由变化和（使用新参数）生成新的路由记录。主要用于记录当前页面状态，使在跳转到新页面再返回时能够重现跳转前的页面。\\n            </p>\\n            <ul class=\\\"group\\\">\\n                <p class=\\\"text-primary\\\"> 通过两个方法用于实现这样的功能：</p>\\n                <li>\\n                    <p>\\n                        1.<span class=\\\"bold\\\">subscribe</span><span class=\\\"text-disabled\\\"> (searchParams: Object;action?: Function)</span>\\n                    </p>\\n                    <div class=\\\"fn-desc mar-b-sm\\\">\\n                        调用此方法将订阅路由变化。当路由发生变化时，会将路由中“;”后的参数的值赋值给传入的searchParams对象的对应字段，然后立即执行action方法（如果传入action参数）。\\n                    </div>\\n                    <p>\\n                        2.<span class=\\\"bold\\\">navigate</span><span class=\\\"text-disabled\\\"></span>\\n                    </p>\\n                    <div class=\\\"fn-desc\\\">\\n                        调用此方法时如果subscribe传入的searchParams参数有字段值发生改变，将生成新的路由记录(“;”后参数的改变)。\\n                    </div>\\n                </li>\\n            </ul>\\n            <div class=\\\"group\\\">\\n                <p class=\\\"text-primary\\\">原理</p>\\n                <p>1.subscribe订阅路由变化；</p>\\n                <p>2.当路由变化时，将“;”后参数的值取出并更新到searchParams对应的字段；</p>\\n                <p>3.使用navigate方法将searchParams里各字段的值拼接成路由“;”后的参数，并生成新的路由记录。</p>\\n                <p>4.页面返回时，返回的是最后一次调用navigate方法产生的路由记录，同时路由变化的事件触发（如2所述），此时就可以通过searchParams各个字段的值来初始化和控制页面的显示。</p>\\n            </div>\\n            <div class=\\\"group\\\">\\n                <p class=\\\"text-primary\\\">如何使用</p>\\n                <p>1.在需要记录的组件下注入单独的实例（TracertService实例在创建改组件时提供）；</p>\\n                <p>2.先调用subscribe方法，其中searchParams参数必须为一个对象；然后在需要记录页面状态的地方调用navigate方法；</p>\\n                <p>3.注意navigate会触发路由的变化，因此需要在适当的时机调用。</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>。\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/tracert-demo/tracert-demo.component.html\n// module id = ./src/app/services/tracert-demo/tracert-demo.component.html\n// module chunks = services.module","module.exports = \".fn-desc {\\n  padding-left: 2em;\\n}\\n.group {\\n  background-color: #fff;\\n  padding: 20px;\\n  border-bottom: none;\\n  border-color: #ddd;\\n}\\n.group:last-child {\\n  border-bottom: 1px solid #ddd;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/tracert-demo/tracert-demo.component.less\n// module id = ./src/app/services/tracert-demo/tracert-demo.component.less\n// module chunks = services.module","import { Component } from '@angular/core';\nimport { TracertService } from 'dolphinng';\n@Component({\n  selector: 'tracert-demo',\n  templateUrl: './tracert-demo.component.html',\n  styleUrls: ['./tracert-demo.component.less'],\n  providers: [TracertService]\n})\nexport class TracertDemoComponent {\n\n  constructor(public tracertSvc: TracertService) {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/tracert-demo/tracert-demo.component.ts"],"sourceRoot":"webpack:///"}